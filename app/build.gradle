buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'

def configPropertiesFile = rootProject.file("config.properties")
def configProperties = new Properties()
configProperties.load(new FileInputStream(configPropertiesFile))


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId configProperties['applicationId']
        minSdkVersion 19
        targetSdkVersion 23
        versionCode Integer.valueOf(configProperties['versionCode'])
        versionName configProperties['versionName']
    }


    signingConfigs {
        debug{
            storeFile file('trending.jks')
            storePassword configProperties['storePassword']
            keyAlias configProperties['keyAlias']
            keyPassword configProperties['keyPassword']
        }
        release {
            storeFile file('trending.jks')
            storePassword configProperties['storePassword']
            keyAlias configProperties['keyAlias']
            keyPassword configProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField("boolean", "LOG_DEBUG", "false")
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}


ext {
    supportLibVersion = '23.2.1'
    retrofitVersion = '2.0.2'
    leakcanaryVersion = '1.4-beta2'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile 'com.roughike:bottom-bar:1.3.3'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.trello:rxlifecycle:0.6.0'
    compile 'com.trello:rxlifecycle-components:0.6.0'
    compile 'io.reactivex:rxjava:1.1.5'

    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'


    compile 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-design:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'

    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"

    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

}
